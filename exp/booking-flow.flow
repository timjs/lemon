context Booking



-- Data ------------------------------------------------------------------------


type Nationality
  is Dutch
  or British
  or German


type Passenger
  is Passenger
    with first_name of String
    and last_name of String
    and nationality of Nationality
    and age of Int


type Flight
  is ToAmsterdam
  or ToLondon
  or ToBerlin


type alias Row is Int
type alias Chair is Char
type Seat
  is Seat
    with row of Row
    and chair of Chair


type Booking
  is Booking
    with passengers of Passenger List
    and flight of Flight
    and seats of Seat List



-- Stores ----------------------------------------------------------------------


store free_seat_store
is
  [ Seat { row,  chair } for row in 1...4 for chair in 'A'...'D' ]



-- Checks ----------------------------------------------------------------------


check valid
takes
  p of Passenger
is
  p.age >= 0


check adult
takes
  p of Passenger
is
  p.age >= 18



-- Tasks -----------------------------------------------------------------------


task enter_passengers
gives
  passengers of Passenger List
is
  enter "Passenger details" for value = passengers
  on Continue when all valid passengers and any adult passengers and not empty passengers then
    done


task enter_flight
gives
  flight of Flight
is
  enter "Flight details" for value = flight
  on Continue do
    done


task choose_seats
takes
  amount of Int
gives
  seats of Seat List
is
  select "Pick a seat" [] free_seat_store for values = seats
  on Continue when length seats == amount do
    update free_seat_store (remove_elements seats)
    done


task make_booking
gives
  booking of Booking
is
  fork
    enter_flight for flight
    done
  fork
    enter_passengers for passengers
    done
  next
  use amount = length passengers to choose_seats for seats next
  use passengers, flight, seats to view "Your booking" for booking
  done


task run
gives
  booking of Booking
is
  fork
    watch "Free seats" free_seat_store
    done
  fork
    make_booking for booking
    done
